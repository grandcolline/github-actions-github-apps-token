name: github-actions-github-apps-token
# MEMO: Description must be less than 125 characters.
description: 'A GitHub Action to get a GitHub Apps token'
author: 'hakadoriya'

branding:
  icon: search
  color: gray-dark

inputs:
  client-id:
    description: 'The Client ID of the GitHub App.'
    required: true
  private-key:
    description: 'The private key of the GitHub App.'
    required: true
  jwt-expiry-seconds:
    description: 'The expiry seconds of the JWT. 600 seconds maximum. (default: 300)'
    default: "300"
    required: false

outputs:
  token:
    value: ${{ steps.generate-apps-token.outputs.token }}
    description: 'The GitHub Apps token.'

runs:
  using: composite
  steps:
    - name: generate-apps-token
      id: generate-apps-token
      env:
        CLIENT_ID: ${{ inputs.client-id }}
        PRIVATE_KEY: ${{ inputs.private-key }}
        JWT_EXPIRY_SECONDS: ${{ inputs.jwt-expiry-seconds }}
      shell: bash
      run: |
        set -Eeu -o pipefail
        # base64url
        base64url() {
          openssl enc -base64 -A | tr '+/' '-_' | tr -d '='
        }
        # sign
        sign() {
          openssl dgst -binary -sha256 -sign <(printf '%s' "${PRIVATE_KEY:?}")
        }
        # JWT header
        header=$(printf '{"alg":"RS256","typ":"JWT"}' | base64url)
        # JWT payload
        now=$(date '+%s')
        iat=${now}
        exp=$((now + JWT_EXPIRY_SECONDS))
        payload=$(printf '{"iss":"%s","iat":%s,"exp":%s}' "${CLIENT_ID}" "${iat}" "${exp}" | base64url)
        echo "::add-mask::${payload}"
        # JWT signature
        signature=$(printf '%s' "${header}.${payload}" | sign | base64url)
        echo "::add-mask::${signature}"
        # JWT
        jwt="${header}.${payload}.${signature}"
        echo "::add-mask::${jwt}"
        # Get the repository installation ID
        installation_id=$(
          curl --location --silent --request GET \
            --url "${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/installation" \
            --header "Accept: application/vnd.github+json" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            --header "Authorization: Bearer ${jwt}" \
            | jq -r '.id'
        )
        # Get the GitHub Apps token
        repo_name=$(echo "${GITHUB_REPOSITORY}" | cut -d '/' -f 2)
        token=$(
          curl --location --silent --request POST \
            --url "${GITHUB_API_URL}/app/installations/${installation_id}/access_tokens" \
            --header "Accept: application/vnd.github+json" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            --header "Authorization: Bearer ${jwt}" \
            --data "$(printf '{"repositories":["%s"]}' "${repo_name}")" \
            | jq -r '.token'
        )
        echo "::add-mask::${token}"
        echo "token=${token}" >>"${GITHUB_OUTPUT}"

    - name: DEBUG
      if: always() && ${{ inputs.debug == 'true' }}
      shell: bash
      run: |
        cat <<'DEBUG_DOC'
        == DEBUG =======================================================
        -- inputs -----------------------------------------------------
        before: ${{ inputs.before }}
        after: ${{ inputs.after }}
        base-ref: ${{ inputs.base-ref }}
        head-ref: ${{ inputs.head-ref }}
        paths-ignore: ${{ inputs.paths-ignore }}
        -- github -----------------------------------------------------
        github.event_name: ${{ github.event_name }}
        github.ref: ${{ github.ref }}
        -- toJSON(github) ----------------------------------------------
        ${{ toJSON(github) }}
        ================================================================
        DEBUG_DOC
